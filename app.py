import streamlit as st
from lexer import lexer
from parser import parser
from codegen import generate
from interpreter import MiniPyVM  # ‚úÖ Added VM support

st.set_page_config(page_title="MiniPy (Basic)", layout="wide")
st.title(" MiniPy Compiler - Basic Edition")

code_input = st.text_area("‚úçÔ∏è Enter MiniPy Code", height=300, value="""x = 5
y = 10
if x < y
    print(x + y)
else
    print(x - y)
""")

if st.button("‚öôÔ∏è Generate Bytecode"):
    try:
        ast = parser.parse(code_input, lexer=lexer)
        bytecode = generate(ast)
        st.subheader("üì¶ Generated Bytecode")
        st.code("\n".join(bytecode))
    except Exception as e:
        st.error(f"Error while generating bytecode: {e}")

if st.button("‚ñ∂Ô∏è Run in VM"):
    try:
        ast = parser.parse(code_input, lexer=lexer)
        bytecode = generate(ast)
        st.subheader("üñ•Ô∏è Output (VM Execution)")
        st.text("‚Üì Output Below ‚Üì")
        with st.echo():
            vm = MiniPyVM(bytecode)
            vm.run()
    except Exception as e:
        st.error(f"Runtime error: {e}")

st.caption("Built with ‚ù§Ô∏è for Hackathons using Python, PLY & Streamlit")
