
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN DIV ELSE ID IF LPAREN LT MINUS MUL NUMBER PLUS PRINT RPAREN WHILEprogram : statement_liststatement_list : statement_list statement\n| statementstatement : assignment\n| print_stmt\n| if_stmt\n| while_stmtassignment : ID ASSIGN expressionprint_stmt : PRINT LPAREN expression RPARENif_stmt : IF expression statement_list ELSE statement_listwhile_stmt : WHILE expression statement_listexpression : expression PLUS expression\n| expression MINUS expression\n| expression MUL expression\n| expression DIV expression\n| expression LT expressionexpression : NUMBERexpression : ID'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,],[8,8,-3,-4,-5,-6,-7,17,17,-2,17,17,8,-17,-18,8,-8,8,17,17,17,17,17,8,-9,8,-12,-13,-14,-15,-16,8,]),'PRINT':([0,2,3,4,5,6,7,12,15,16,17,18,19,21,27,28,29,30,31,32,33,34,35,],[9,9,-3,-4,-5,-6,-7,-2,9,-17,-18,9,-8,9,9,-9,9,-12,-13,-14,-15,-16,9,]),'IF':([0,2,3,4,5,6,7,12,15,16,17,18,19,21,27,28,29,30,31,32,33,34,35,],[10,10,-3,-4,-5,-6,-7,-2,10,-17,-18,10,-8,10,10,-9,10,-12,-13,-14,-15,-16,10,]),'WHILE':([0,2,3,4,5,6,7,12,15,16,17,18,19,21,27,28,29,30,31,32,33,34,35,],[11,11,-3,-4,-5,-6,-7,-2,11,-17,-18,11,-8,11,11,-9,11,-12,-13,-14,-15,-16,11,]),'$end':([1,2,3,4,5,6,7,12,16,17,19,27,28,30,31,32,33,34,35,],[0,-1,-3,-4,-5,-6,-7,-2,-17,-18,-8,-11,-9,-12,-13,-14,-15,-16,-10,]),'ELSE':([3,4,5,6,7,12,16,17,19,21,27,28,30,31,32,33,34,35,],[-3,-4,-5,-6,-7,-2,-17,-18,-8,29,-11,-9,-12,-13,-14,-15,-16,-10,]),'ASSIGN':([8,],[13,]),'LPAREN':([9,],[14,]),'NUMBER':([10,11,13,14,22,23,24,25,26,],[16,16,16,16,16,16,16,16,16,]),'PLUS':([15,16,17,18,19,20,30,31,32,33,34,],[22,-17,-18,22,22,22,22,22,22,22,22,]),'MINUS':([15,16,17,18,19,20,30,31,32,33,34,],[23,-17,-18,23,23,23,23,23,23,23,23,]),'MUL':([15,16,17,18,19,20,30,31,32,33,34,],[24,-17,-18,24,24,24,24,24,24,24,24,]),'DIV':([15,16,17,18,19,20,30,31,32,33,34,],[25,-17,-18,25,25,25,25,25,25,25,25,]),'LT':([15,16,17,18,19,20,30,31,32,33,34,],[26,-17,-18,26,26,26,26,26,26,26,26,]),'RPAREN':([16,17,20,30,31,32,33,34,],[-17,-18,28,-12,-13,-14,-15,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,15,18,29,],[2,21,27,35,]),'statement':([0,2,15,18,21,27,29,35,],[3,12,3,3,12,12,3,12,]),'assignment':([0,2,15,18,21,27,29,35,],[4,4,4,4,4,4,4,4,]),'print_stmt':([0,2,15,18,21,27,29,35,],[5,5,5,5,5,5,5,5,]),'if_stmt':([0,2,15,18,21,27,29,35,],[6,6,6,6,6,6,6,6,]),'while_stmt':([0,2,15,18,21,27,29,35,],[7,7,7,7,7,7,7,7,]),'expression':([10,11,13,14,22,23,24,25,26,],[15,18,19,20,30,31,32,33,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',6),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',10),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',11),
  ('statement -> assignment','statement',1,'p_statement','parser.py',18),
  ('statement -> print_stmt','statement',1,'p_statement','parser.py',19),
  ('statement -> if_stmt','statement',1,'p_statement','parser.py',20),
  ('statement -> while_stmt','statement',1,'p_statement','parser.py',21),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','parser.py',25),
  ('print_stmt -> PRINT LPAREN expression RPAREN','print_stmt',4,'p_print_stmt','parser.py',29),
  ('if_stmt -> IF expression statement_list ELSE statement_list','if_stmt',5,'p_if_stmt','parser.py',33),
  ('while_stmt -> WHILE expression statement_list','while_stmt',3,'p_while_stmt','parser.py',37),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',41),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',42),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','parser.py',43),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','parser.py',44),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',45),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',49),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',53),
]
